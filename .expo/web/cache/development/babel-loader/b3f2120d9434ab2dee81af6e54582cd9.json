{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/UI/LoginButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { THEME } from \"../../../constants/theme\";\nexport var LoginButton = function LoginButton(_ref) {\n  var children = _ref.children,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? THEME.LOGIN_BTN_COLOR : _ref$color,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableNativeFeedback, {\n    activeOpacity: 0.8,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    onPress: onPress,\n    style: _objectSpread({}, styles.button, {\n      color: color\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, children)));\n};\nvar styles = StyleSheet.create({\n  button: {\n    textAlign: \"center\",\n    backgroundColor: THEME.LOGIN_BTN_BG,\n    width: 250,\n    height: 50,\n    paddingLeft: 10,\n    paddingTop: 14,\n    marginTop: 20,\n    marginBottom: 7,\n    fontSize: 16,\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/UI/LoginButton.js"],"names":["React","THEME","LoginButton","children","color","LOGIN_BTN_COLOR","onPress","styles","button","StyleSheet","create","textAlign","backgroundColor","LOGIN_BTN_BG","width","height","paddingLeft","paddingTop","marginTop","marginBottom","fontSize","textTransform"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,KAAT;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAIrB;AAAA,MAHLC,QAGK,QAHLA,QAGK;AAAA,wBAFLC,KAEK;AAAA,MAFLA,KAEK,2BAFGH,KAAK,CAACI,eAET;AAAA,MADLC,OACK,QADLA,OACK;AACL,SACC,oBAAC,uBAAD;AAAyB,IAAA,aAAa,EAAE,GAAxC;AAA6C,IAAA,OAAO,EAAEA,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAwB,IAAA,KAAK,oBAAOC,MAAM,CAACC,MAAd;AAAsBJ,MAAAA,KAAK,EAAEA;AAA7B,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,QADF,CADD,CADD,CADD;AASA,CAdM;AAgBP,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,MAAM,EAAE;AACPG,IAAAA,SAAS,EAAE,QADJ;AAEPC,IAAAA,eAAe,EAAEX,KAAK,CAACY,YAFhB;AAGPC,IAAAA,KAAK,EAAE,GAHA;AAIPC,IAAAA,MAAM,EAAE,EAJD;AAKPC,IAAAA,WAAW,EAAE,EALN;AAMPC,IAAAA,UAAU,EAAE,EANL;AAOPC,IAAAA,SAAS,EAAE,EAPJ;AAQPC,IAAAA,YAAY,EAAE,CARP;AASPC,IAAAA,QAAQ,EAAE,EATH;AAUPC,IAAAA,aAAa,EAAE;AAVR;AADwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, TouchableNativeFeedback } from \"react-native\";\nimport { THEME } from \"../../../constants/theme\";\n\nexport const LoginButton = ({\n\tchildren,\n\tcolor = THEME.LOGIN_BTN_COLOR,\n\tonPress,\n}) => {\n\treturn (\n\t\t<TouchableNativeFeedback activeOpacity={0.8} onPress={onPress}>\n\t\t\t<View>\n\t\t\t\t<Text onPress={onPress} style={{ ...styles.button, color: color }}>\n\t\t\t\t\t{children}\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t</TouchableNativeFeedback>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tbutton: {\n\t\ttextAlign: \"center\",\n\t\tbackgroundColor: THEME.LOGIN_BTN_BG,\n\t\twidth: 250,\n\t\theight: 50,\n\t\tpaddingLeft: 10,\n\t\tpaddingTop: 14,\n\t\tmarginTop: 20,\n\t\tmarginBottom: 7,\n\t\tfontSize: 16,\n\t\ttextTransform: \"uppercase\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}