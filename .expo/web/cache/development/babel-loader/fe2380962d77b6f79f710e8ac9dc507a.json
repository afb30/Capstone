{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/UI/RoundButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { Foundation } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nexport var RoundButton = function RoundButton(_ref) {\n  var style = _ref.style,\n      onPress = _ref.onPress,\n      size = _ref.size,\n      color = _ref.color,\n      name = _ref.name,\n      iconColor = _ref.iconColor;\n  var Wrapper = Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n  return React.createElement(View, {\n    style: _objectSpread({}, styles.button, {\n      width: size,\n      height: size,\n      backgroundColor: color\n    }, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, React.createElement(Wrapper, {\n    background: TouchableNativeFeedback.Ripple(\"red\"),\n    activeOpacity: 0.8,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, React.createElement(Foundation, {\n    name: name,\n    style: {\n      fontSize: size / 1.8,\n      color: iconColor ? iconColor : \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 45,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/UI/RoundButton.js"],"names":["React","Foundation","TouchableOpacity","RoundButton","style","onPress","size","color","name","iconColor","Wrapper","Platform","OS","TouchableNativeFeedback","styles","button","width","height","backgroundColor","Ripple","fontSize","StyleSheet","create","alignItems","justifyContent","borderRadius","elevation"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAOA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOrB;AAAA,MANLC,KAMK,QANLA,KAMK;AAAA,MALLC,OAKK,QALLA,OAKK;AAAA,MAJLC,IAIK,QAJLA,IAIK;AAAA,MAHLC,KAGK,QAHLA,KAGK;AAAA,MAFLC,IAEK,QAFLA,IAEK;AAAA,MADLC,SACK,QADLA,SACK;AACL,MAAMC,OAAO,GACZC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,uBAA5B,GAAsDX,gBADvD;AAEA,SACC,oBAAC,IAAD;AACC,IAAA,KAAK,oBACDY,MAAM,CAACC,MADN;AAEJC,MAAAA,KAAK,EAAEV,IAFH;AAGJW,MAAAA,MAAM,EAAEX,IAHJ;AAIJY,MAAAA,eAAe,EAAEX;AAJb,OAKDH,KALC,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,oBAAC,OAAD;AACC,IAAA,UAAU,EAAES,uBAAuB,CAACM,MAAxB,CAA+B,KAA/B,CADb;AAEC,IAAA,aAAa,EAAE,GAFhB;AAGC,IAAA,OAAO,EAAEd,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,UAAD;AACC,IAAA,IAAI,EAAEG,IADP;AAEC,IAAA,KAAK,EAAE;AACNY,MAAAA,QAAQ,EAAEd,IAAI,GAAG,GADX;AAENC,MAAAA,KAAK,EAAEE,SAAS,GAAGA,SAAH,GAAe;AAFzB,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CATD,CADD;AAyBA,CAnCM;AAqCP,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAChCP,EAAAA,MAAM,EAAE;AACPQ,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,SAAS,EAAE;AAJJ;AADwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n\tView,\n\tStyleSheet,\n\tPlatform,\n\tTouchableNativeFeedback,\n} from \"react-native\";\nimport { Foundation } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nexport const RoundButton = ({\n\tstyle,\n\tonPress,\n\tsize,\n\tcolor,\n\tname,\n\ticonColor,\n}) => {\n\tconst Wrapper =\n\t\tPlatform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\t...styles.button,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tbackgroundColor: color,\n\t\t\t\t...style,\n\t\t\t}}\n\t\t>\n\t\t\t<Wrapper\n\t\t\t\tbackground={TouchableNativeFeedback.Ripple(\"red\")}\n\t\t\t\tactiveOpacity={0.8}\n\t\t\t\tonPress={onPress}\n\t\t\t>\n\t\t\t\t<Foundation\n\t\t\t\t\tname={name}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontSize: size / 1.8,\n\t\t\t\t\t\tcolor: iconColor ? iconColor : \"#fff\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Wrapper>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tbutton: {\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tborderRadius: 45,\n\t\televation: 5,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}