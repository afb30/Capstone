{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar _expo = require(\"expo\");\n\nvar _AppNavigation = require(\"./src/navigation/AppNavigation\");\n\nvar _reactNativeExtendedStylesheet = _interopRequireWildcard(require(\"react-native-extended-stylesheet\"));\n\nvar _jsxFileName = \"/Users/lexa/Documents/GitHub/Capstone/App.js\";\n\nfunction loadApplication() {\n  return _regenerator.default.async(function loadApplication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regenerator.default.awrap(Font.loadAsync({\n            \"roboto-regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            \"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\n            \"roboto-thin\": require(\"./assets/fonts/Roboto-Thin.ttf\"),\n            \"roboto-light\": require(\"./assets/fonts/Roboto-Thin.ttf\")\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _Dimensions$get = _Dimensions.default.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar rem = width > 360 ? 18 : 14;\n\n_reactNativeExtendedStylesheet.default.build({\n  $rem: rem\n});\n\nfunction App() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (!isReady) {\n    return _react.default.createElement(_expo.AppLoading, {\n      startAsync: loadApplication,\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    });\n  }\n\n  return _react.default.createElement(_AppNavigation.AppNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/lexa/Documents/GitHub/Capstone/App.js"],"names":["loadApplication","Font","loadAsync","require","Dimensions","get","width","rem","EStyleSheet","build","$rem","App","isReady","setIsReady","err","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;AACA;;AACA;;;;AAGA,SAAeA,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACOC,IAAI,CAACC,SAAL,CAAe;AACpB,8BAAkBC,OAAO,qCADL;AAEpB,2BAAeA,OAAO,kCAFF;AAGpB,2BAAeA,OAAO,kCAHF;AAIpB,4BAAgBA,OAAO;AAJH,WAAf,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;sBAUkBC,oBAAWC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;AACR,IAAMC,GAAG,GAAGD,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmB,EAA/B;;AAGAE,uCAAYC,KAAZ,CAAkB;AAAEC,EAAAA,IAAI,EAAEH;AAAR,CAAlB;;AAEe,SAASI,GAAT,GAAe;AAAA,kBACC,qBAAS,KAAT,CADD;AAAA;AAAA,MACtBC,OADsB;AAAA,MACbC,UADa;;AAG7B,MAAI,CAACD,OAAL,EAAc;AACb,WACC,6BAAC,gBAAD;AACC,MAAA,UAAU,EAAEZ,eADb;AAEC,MAAA,OAAO,EAAE,iBAACc,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAFV;AAGC,MAAA,QAAQ,EAAE;AAAA,eAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAOA;;AAED,SAAO,6BAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { Dimensions } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { AppNavigation } from \"./src/navigation/AppNavigation\";\nimport EStyleSheet, { create } from \"react-native-extended-stylesheet\";\n\n// loading fonts\nasync function loadApplication() {\n\tawait Font.loadAsync({\n\t\t\"roboto-regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n\t\t\"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\n\t\t\"roboto-thin\": require(\"./assets/fonts/Roboto-Thin.ttf\"),\n\t\t\"roboto-light\": require(\"./assets/fonts/Roboto-Thin.ttf\"),\n\t});\n}\n\n// defining rem units\nconst { width } = Dimensions.get(\"window\");\nconst rem = width > 360 ? 18 : 14;\n\n// setting global variables\nEStyleSheet.build({ $rem: rem });\n\nexport default function App() {\n\tconst [isReady, setIsReady] = useState(false);\n\t\n\tif (!isReady) {\n\t\treturn (\n\t\t\t<AppLoading\n\t\t\t\tstartAsync={loadApplication}\n\t\t\t\tonError={(err) => console.log(err)}\n\t\t\t\tonFinish={() => setIsReady(true)}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn <AppNavigation />;\n}"]},"metadata":{},"sourceType":"script"}