{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/DayPicker.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport EStyleSheet from \"react-native-extended-stylesheet\";\nexport var DayPicker = function DayPicker(_ref) {\n  var onChange = _ref.onChange;\n  var days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  var curDay = days[new Date().getDay() - 1];\n\n  var _useState = useState(curDay),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var changeHandler = function changeHandler(itemValue, itemIndex) {\n    onChange(itemIndex);\n    setSelectedValue(itemValue);\n  };\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    onValueChange: changeHandler,\n    mode: \"dropdown\",\n    style: {\n      height: 30,\n      width: width * 0.4,\n      marginTop: 9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, days.map(function (day, index) {\n    return React.createElement(Picker.Item, {\n      key: index,\n      label: day,\n      value: day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  })));\n};\nvar styles = EStyleSheet.create({\n  container: {\n    width: 130,\n    height: 32\n  }\n});","map":{"version":3,"sources":["/Users/lexa/Desktop/React-Example/react-native-helloclass/src/components/DayPicker.js"],"names":["React","useState","EStyleSheet","DayPicker","onChange","days","curDay","Date","getDay","selectedValue","setSelectedValue","changeHandler","itemValue","itemIndex","Dimensions","get","width","height","styles","container","marginTop","map","day","index","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC1C,MAAMC,IAAI,GAAG,CACZ,QADY,EAEZ,SAFY,EAGZ,WAHY,EAIZ,UAJY,EAKZ,QALY,EAMZ,UANY,EAOZ,QAPY,CAAb;AASA,MAAMC,MAAM,GAAGD,IAAI,CAAC,IAAIE,IAAJ,GAAWC,MAAX,KAAsB,CAAvB,CAAnB;;AAV0C,kBAWAP,QAAQ,CAACK,MAAD,CAXR;AAAA;AAAA,MAWnCG,aAXmC;AAAA,MAWpBC,gBAXoB;;AAa1C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC/CT,IAAAA,QAAQ,CAACS,SAAD,CAAR;AACAH,IAAAA,gBAAgB,CAACE,SAAD,CAAhB;AACA,GAHD;;AAb0C,wBAkBhBE,UAAU,CAACC,GAAX,CAAe,QAAf,CAlBgB;AAAA,MAkBlCC,KAlBkC,mBAkBlCA,KAlBkC;AAAA,MAkB3BC,MAlB2B,mBAkB3BA,MAlB2B;;AAoB1C,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,aAAa,EAAEV,aADhB;AAEC,IAAA,aAAa,EAAEE,aAFhB;AAGC,IAAA,IAAI,EAAC,UAHN;AAIC,IAAA,KAAK,EAAE;AACNM,MAAAA,MAAM,EAAE,EADF;AAEND,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAFT;AAGNI,MAAAA,SAAS,EAAE;AAHL,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEf,IAAI,CAACgB,GAAL,CAAS,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACzB,WAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,KAAK,EAAED,GAAhC;AAAqC,MAAA,KAAK,EAAEA,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAFA,CAVF,CADD,CADD;AAkBA,CAtCM;AAwCP,IAAMJ,MAAM,GAAGhB,WAAW,CAACsB,MAAZ,CAAmB;AACjCL,EAAAA,SAAS,EAAE;AACVH,IAAAA,KAAK,EAAE,GADG;AAEVC,IAAAA,MAAM,EAAE;AAFE;AADsB,CAAnB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Picker, Dimensions } from \"react-native\";\nimport EStyleSheet from \"react-native-extended-stylesheet\";\n\nexport const DayPicker = ({ onChange }) => {\n\tconst days = [\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t\t\"Sunday\",\n\t];\n\tconst curDay = days[new Date().getDay() - 1];\n\tconst [selectedValue, setSelectedValue] = useState(curDay);\n\n\tconst changeHandler = (itemValue, itemIndex) => {\n\t\tonChange(itemIndex);\n\t\tsetSelectedValue(itemValue);\n\t};\n\n\tconst { width, height } = Dimensions.get(\"window\");\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Picker\n\t\t\t\tselectedValue={selectedValue}\n\t\t\t\tonValueChange={changeHandler}\n\t\t\t\tmode=\"dropdown\"\n\t\t\t\tstyle={{\n\t\t\t\t\theight: 30,\n\t\t\t\t\twidth: width * 0.4,\n\t\t\t\t\tmarginTop: 9,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{days.map((day, index) => {\n\t\t\t\t\treturn <Picker.Item key={index} label={day} value={day} />;\n\t\t\t\t})}\n\t\t\t</Picker>\n\t\t</View>\n\t);\n};\n\nconst styles = EStyleSheet.create({\n\tcontainer: {\n\t\twidth: 130,\n\t\theight: 32,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}